/**
 * This file has been generated using TS-CLI.
 * This file contains the mock of the %Model_NAME%Service, this can be used in the Controller Unit Test
 */

import { of, Observable } from "rxjs";
import { MOCK_%MODEL_NAME%_MODELS } from "../data/%model_NAME%.mock.data";
import { %Model_NAME% } from "../../models/%model_NAME%.model";
import { Paginated%Models_NAME%DTO } from "../../dto/%model_NAME%.dto";

export class %Models_NAME%ServiceStub {

  getAll(): Observable<%Model_NAME%[]> {
    return of(MOCK_%MODEL_NAME%_MODELS);
  }

  getAllPaginated(pageSize: number, pageIndex: number, sortName: string, sortDirection: number): Observable<Paginated%Models_NAME%DTO> {
    return of({
      pageSize,
      pageIndex,
      totalCount: MOCK_%MODEL_NAME%_MODELS.length,
      %models_NAME%: [... MOCK_%MODEL_NAME%_MODELS],
    } as Paginated%Models_NAME%DTO)
  }
  
  getById(): Observable<%Model_NAME%> {
    return of(MOCK_%MODEL_NAME%_MODELS[0]);
  }

  create():Observable<%Model_NAME%> {
    return of(MOCK_%MODEL_NAME%_MODELS[0]);
  }

  update(): Observable<%Model_NAME%> {
    return of(MOCK_%MODEL_NAME%_MODELS[0]);
  }

  delete(id: string): Observable<boolean> {
    return of(true);
  }
}
